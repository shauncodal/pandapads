// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: p6tU1MHcNvqW8cSkqwHcz5
// Component: QQ-rhbiQtD1
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import TopMenu from "../../TopMenu"; // plasmic-import: dpTc1VI3P5/component
import { useScreenVariants as useScreenVariants_8UQYRsGwai } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 8U-qYRsGwai/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_panda.module.css"; // plasmic-import: p6tU1MHcNvqW8cSkqwHcz5/projectcss
import sty from "./PlasmicGetInvolved.module.css"; // plasmic-import: QQ-rhbiQtD1/css
import VerticalHRsvgIcon from "./icons/PlasmicIcon__VerticalHRsvg"; // plasmic-import: XmHlOAzX_A/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: L6LSWcuzGo/icon
import IconInstasvgIcon from "./icons/PlasmicIcon__IconInstasvg"; // plasmic-import: J9OPz5GQhT/icon
import IconTwsvgIcon from "./icons/PlasmicIcon__IconTwsvg"; // plasmic-import: xWz3mP7J7n/icon
import IconFbsvgIcon from "./icons/PlasmicIcon__IconFbsvg"; // plasmic-import: -3jNUbjHt8/icon

export const PlasmicGetInvolved__VariantProps = new Array();

export const PlasmicGetInvolved__ArgProps = new Array();

function PlasmicGetInvolved__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_8UQYRsGwai()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Get Involved"}</title>
        <meta key="og:title" property="og:title" content={"Get Involved"} />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <TopMenu
            data-plasmic-name={"topMenu"}
            data-plasmic-override={overrides.topMenu}
            className={classNames("__wab_instance", sty.topMenu)}
          />

          <div className={classNames(projectcss.all, sty.freeBox___8Y6Fr)}>
            <div className={classNames(projectcss.all, sty.freeBox__oYxIt)} />

            <div className={classNames(projectcss.all, sty.freeBox__rnvCt)}>
              <div className={classNames(projectcss.all, sty.freeBox__psUf1)}>
                <VerticalHRsvgIcon
                  className={classNames(projectcss.all, sty.svg__i3S10)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wJfG
                  )}
                >
                  {"How you can get involved"}
                </div>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__ebPpO)} />

            {(
              hasVariant(globalVariants, "screen", "desktopOnly") ? true : true
            ) ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__g1UnP)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___58X5)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "desktopOnly")
                      ? "100%"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "desktopOnly")
                      ? "600px"
                      : "300px"
                  }
                  loading={
                    hasVariant(globalVariants, "screen", "desktopOnly")
                      ? "lazy"
                      : "lazy"
                  }
                  src={
                    hasVariant(globalVariants, "screen", "desktopOnly")
                      ? {
                          src: "/plasmic/panda/images/whatsAppImage20211210At1039241Jpeg.jpeg",
                          fullWidth: 1280,
                          fullHeight: 960,
                          aspectRatio: undefined
                        }
                      : {
                          src: "/plasmic/panda/images/whatsAppImage20211210At1039241Jpeg.jpeg",
                          fullWidth: 1280,
                          fullHeight: 960,
                          aspectRatio: undefined
                        }
                  }
                />

                {(
                  hasVariant(globalVariants, "screen", "desktopOnly")
                    ? true
                    : true
                ) ? (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ayJte)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "desktopOnly")
                        ? "100%"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "desktopOnly")
                        ? "624px"
                        : "300px"
                    }
                    loading={
                      hasVariant(globalVariants, "screen", "desktopOnly")
                        ? "lazy"
                        : "lazy"
                    }
                    src={
                      hasVariant(globalVariants, "screen", "desktopOnly")
                        ? {
                            src: "/plasmic/panda/images/_61778005002244828Dc1Cb7Af9Cf8D81Jpeg.jpeg",
                            fullWidth: 1280,
                            fullHeight: 924,
                            aspectRatio: undefined
                          }
                        : {
                            src: "/plasmic/panda/images/whatsAppImage20211210At1039241Jpeg.jpeg",
                            fullWidth: 1280,
                            fullHeight: 960,
                            aspectRatio: undefined
                          }
                    }
                  />
                ) : null}
              </p.Stack>
            ) : null}
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__f1Qrb)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__uky3D)}>
              <Icon6Icon
                className={classNames(projectcss.all, sty.svg__bObky)}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___1Jf8E
                )}
              >
                {
                  "Donate any amount to our Non-Profit Organisation and become a member of our keep a girl child in school campaign."
                }
              </div>

              <button
                data-plasmic-name={"btnDonate"}
                data-plasmic-override={overrides.btnDonate}
                className={classNames(
                  projectcss.button,
                  projectcss.__wab_text,
                  sty.btnDonate
                )}
              >
                {"Donate Now"}
              </button>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__lFgp2
              )}
            >
              {"Become an Ambassador"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__sJlia
              )}
            >
              {
                "Become an Ambassador by using your connections and social media platforms to create awareness of Period Poverty and how it affects millions of women around the world. "
              }
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__mEjcJ)}
            >
              <button
                data-plasmic-name={"keepagirlinschool"}
                data-plasmic-override={overrides.keepagirlinschool}
                className={classNames(
                  projectcss.button,
                  projectcss.__wab_text,
                  sty.keepagirlinschool
                )}
                disabled={false}
              >
                {"#KeepAGirlInSchool"}
              </button>

              <button
                data-plasmic-name={"ecofriendly"}
                data-plasmic-override={overrides.ecofriendly}
                className={classNames(
                  projectcss.button,
                  projectcss.__wab_text,
                  sty.ecofriendly
                )}
              >
                {"#EcoFriendly"}
              </button>

              <button
                data-plasmic-name={"periodpoverty"}
                data-plasmic-override={overrides.periodpoverty}
                className={classNames(
                  projectcss.button,
                  projectcss.__wab_text,
                  sty.periodpoverty
                )}
              >
                {"#PeriodPoverty"}
              </button>
            </p.Stack>

            <div className={classNames(projectcss.all, sty.freeBox__jQiI)}>
              <IconInstasvgIcon
                data-plasmic-name={"instagram"}
                data-plasmic-override={overrides.instagram}
                className={classNames(projectcss.all, sty.instagram)}
                role={"img"}
              />

              <div className={classNames(projectcss.all, sty.freeBox___1UTww)}>
                <IconTwsvgIcon
                  data-plasmic-name={"twitter"}
                  data-plasmic-override={overrides.twitter}
                  className={classNames(projectcss.all, sty.twitter)}
                  role={"img"}
                />

                <div className={classNames(projectcss.all, sty.freeBox__kDcb6)}>
                  <IconFbsvgIcon
                    data-plasmic-name={"facebook"}
                    data-plasmic-override={overrides.facebook}
                    className={classNames(projectcss.all, sty.facebook)}
                    role={"img"}
                  />
                </div>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__elNzz)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gyreG
                )}
              >
                {"Set and forget "}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dty8F
                )}
              >
                {
                  "Set up a monthly debit order to make donating a hassle free contribution and ensuring there will always be someone new receiving a Care Kit every month "
                }
              </div>

              <button
                data-plasmic-name={"debitOrder"}
                data-plasmic-override={overrides.debitOrder}
                className={classNames(
                  projectcss.button,
                  projectcss.__wab_text,
                  sty.debitOrder
                )}
              >
                {"Setup a monthly debit order"}
              </button>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__fbcc1)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___01Cc4
                )}
              >
                {"Donate Care Kit Items"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___7QC7I
                )}
              >
                {
                  "Donate any items that form part of our Care Kits, namely, 5 litre white buckets with a lid and handle; laundry soap bars, personal body wash soap bars and Nutri-Go’s nutritious meals. "
                }
              </div>

              <button
                data-plasmic-name={"donateCareKit"}
                data-plasmic-override={overrides.donateCareKit}
                className={classNames(
                  projectcss.button,
                  projectcss.__wab_text,
                  sty.donateCareKit
                )}
              >
                {"Donate Care Kit Items"}
              </button>
            </div>
          </p.Stack>

          <div className={classNames(projectcss.all, sty.freeBox__fheix)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__tj35T
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                <p.PlasmicLink
                  data-plasmic-name={"link"}
                  data-plasmic-override={overrides.link}
                  className={classNames(
                    projectcss.a,
                    projectcss.__wab_text,
                    projectcss.plasmic_default__inline,
                    sty.link
                  )}
                  component={Link}
                  href={"mailto:info@pandapads.co.za"}
                  platform={"nextjs"}
                >
                  {"info@pandapads.co.za"}
                </p.PlasmicLink>
                <React.Fragment>
                  {
                    "\nSandi: 0834770123\nRebecca: 0795011862\nWe are based in Randburg, Johannesburg.\n"
                  }
                </React.Fragment>
              </React.Fragment>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "topMenu",
    "btnDonate",
    "keepagirlinschool",
    "ecofriendly",
    "periodpoverty",
    "instagram",
    "twitter",
    "facebook",
    "debitOrder",
    "donateCareKit",
    "link"
  ],

  topMenu: ["topMenu"],
  btnDonate: ["btnDonate"],
  keepagirlinschool: ["keepagirlinschool"],
  ecofriendly: ["ecofriendly"],
  periodpoverty: ["periodpoverty"],
  instagram: ["instagram"],
  twitter: ["twitter"],
  facebook: ["facebook"],
  debitOrder: ["debitOrder"],
  donateCareKit: ["donateCareKit"],
  link: ["link"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicGetInvolved__ArgProps,
      internalVariantPropNames: PlasmicGetInvolved__VariantProps
    });

    return PlasmicGetInvolved__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicGetInvolved";
  } else {
    func.displayName = `PlasmicGetInvolved.${nodeName}`;
  }
  return func;
}

export const PlasmicGetInvolved = Object.assign(
  // Top-level PlasmicGetInvolved renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    topMenu: makeNodeComponent("topMenu"),
    btnDonate: makeNodeComponent("btnDonate"),
    keepagirlinschool: makeNodeComponent("keepagirlinschool"),
    ecofriendly: makeNodeComponent("ecofriendly"),
    periodpoverty: makeNodeComponent("periodpoverty"),
    instagram: makeNodeComponent("instagram"),
    twitter: makeNodeComponent("twitter"),
    facebook: makeNodeComponent("facebook"),
    debitOrder: makeNodeComponent("debitOrder"),
    donateCareKit: makeNodeComponent("donateCareKit"),
    link: makeNodeComponent("link"),
    // Metadata about props expected for PlasmicGetInvolved
    internalVariantProps: PlasmicGetInvolved__VariantProps,
    internalArgProps: PlasmicGetInvolved__ArgProps
  }
);

export default PlasmicGetInvolved;
/* prettier-ignore-end */
