// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3ekFgeJQEEmC58uuLfkDcf
// Component: cZizgDP4JGf
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavPageTitle from "../../NavPageTitle"; // plasmic-import: _bfo_NMVKD/component
import IconRound from "../../IconRound"; // plasmic-import: fi0LamIfb0/component
import DateBlox from "../../DateBlox"; // plasmic-import: orx5TfVrvy/component
import { useScreenVariants as useScreenVariantstPLuZHt02V } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: tPLuZHt02v/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_imbewu_mobile_first.module.css"; // plasmic-import: 3ekFgeJQEEmC58uuLfkDcf/projectcss
import sty from "./PlasmicDashboard.module.css"; // plasmic-import: cZizgDP4JGf/css
import Icon13Icon from "./icons/PlasmicIcon__Icon13"; // plasmic-import: vttMZV6ARU/icon
import CalendarMultipleChecksvgIcon from "./icons/PlasmicIcon__CalendarMultipleChecksvg"; // plasmic-import: s28DxDKdcY/icon
import PlusRoundIcon from "./icons/PlasmicIcon__PlusRound"; // plasmic-import: oNedDfWT7/icon

export const PlasmicDashboard__VariantProps = new Array();

export const PlasmicDashboard__ArgProps = new Array();

function PlasmicDashboard__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantstPLuZHt02V()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__mlU8P)}>
            <div className={classNames(projectcss.all, sty.freeBox__gFgea)}>
              <NavPageTitle
                data-plasmic-name={"navPageTitle"}
                data-plasmic-override={overrides.navPageTitle}
                className={classNames("__wab_instance", sty.navPageTitle)}
                pageTitle={
                  <div
                    data-plasmic-name={"pageTitle2"}
                    data-plasmic-override={overrides.pageTitle2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.pageTitle2
                    )}
                  >
                    {"My Dashboard"}
                  </div>
                }
              />

              {(
                hasVariant(globalVariants, "screen", "smallMobile")
                  ? true
                  : true
              ) ? (
                <div
                  data-plasmic-name={"outer"}
                  data-plasmic-override={overrides.outer}
                  className={classNames(projectcss.all, sty.outer)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___4BTsN)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___7SfDr
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rn6SW
                        )}
                      >
                        {"My Dashboard"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__w33Jx
                        )}
                      >
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.img,
                            sty.img___9YrAm
                          )}
                          src={
                            "/plasmic/imbewu_mobile_first/images/avatarjpg.jpeg"
                          }
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__kHuto
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__frLlV
                            )}
                          >
                            {"Thuli Mokokeng"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jqbBo
                            )}
                          >
                            {"Primary Member "}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__aXkHz
                            )}
                          >
                            <Icon13Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__v9Cfw
                              )}
                              role={"img"}
                            />
                          </div>
                        </div>
                      </p.Stack>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__hs3L0)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__rKyjA
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__utpWz
                          )}
                        >
                          {"Your policy is now active"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jVi9L
                          )}
                        >
                          <IconRound
                            data-plasmic-name={"iconRound"}
                            data-plasmic-override={overrides.iconRound}
                            className={classNames(
                              "__wab_instance",
                              sty.iconRound
                            )}
                            icon={
                              <CalendarMultipleChecksvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__bcLde
                                )}
                                role={"img"}
                              />
                            }
                          />
                        </div>
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hJmp7
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bqUN
                          )}
                        >
                          {"Next Policy Payment "}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8KdZa
                          )}
                        >
                          {"25 | 02 | 2021"}
                        </div>
                      </p.Stack>
                    </div>

                    {(
                      hasVariant(globalVariants, "screen", "smallMobile")
                        ? true
                        : false
                    ) ? (
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__gnMd9
                        )}
                      >
                        <DateBlox
                          className={classNames(
                            "__wab_instance",
                            sty.dateBlox___8DrRh
                          )}
                          unnamedVariant={true}
                        />

                        <DateBlox
                          className={classNames(
                            "__wab_instance",
                            sty.dateBlox__jIWkI
                          )}
                          unnamedVariant={true}
                        >
                          {"FEB"}
                        </DateBlox>

                        <DateBlox
                          className={classNames(
                            "__wab_instance",
                            sty.dateBlox__xwOyR
                          )}
                        >
                          {"MAR"}
                        </DateBlox>

                        <DateBlox
                          className={classNames(
                            "__wab_instance",
                            sty.dateBlox___9O2Jt
                          )}
                        >
                          {"APR"}
                        </DateBlox>

                        <DateBlox
                          className={classNames(
                            "__wab_instance",
                            sty.dateBlox__ahgLj
                          )}
                        >
                          {"MAY"}
                        </DateBlox>

                        <DateBlox
                          className={classNames(
                            "__wab_instance",
                            sty.dateBlox__kjwTg
                          )}
                        >
                          {"JUN"}
                        </DateBlox>

                        <DateBlox
                          className={classNames(
                            "__wab_instance",
                            sty.dateBlox__rUmkE
                          )}
                        >
                          {"JUL"}
                        </DateBlox>

                        <DateBlox
                          className={classNames(
                            "__wab_instance",
                            sty.dateBlox__nafpT
                          )}
                        >
                          {"AUG"}
                        </DateBlox>

                        <DateBlox
                          className={classNames(
                            "__wab_instance",
                            sty.dateBlox__fUwm
                          )}
                        >
                          {"SEP"}
                        </DateBlox>

                        <DateBlox
                          className={classNames(
                            "__wab_instance",
                            sty.dateBlox__ohRDq
                          )}
                        >
                          {"OCT"}
                        </DateBlox>

                        <DateBlox
                          className={classNames(
                            "__wab_instance",
                            sty.dateBlox__gnsui
                          )}
                        >
                          {"NOV"}
                        </DateBlox>

                        <DateBlox
                          className={classNames(
                            "__wab_instance",
                            sty.dateBlox__bvhzZ
                          )}
                        >
                          {"DEC"}
                        </DateBlox>
                      </p.Stack>
                    ) : null}

                    <div
                      className={classNames(projectcss.all, sty.freeBox__md2Sw)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__n1Hvt
                        )}
                      >
                        {"My Dependents"}
                      </div>
                    </div>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ax047)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__dod9Z
                        )}
                      >
                        <img
                          alt={""}
                          className={classNames(projectcss.img, sty.img__wuCxr)}
                          src={
                            "/plasmic/imbewu_mobile_first/images/avatarjpg.jpeg"
                          }
                        />

                        <img
                          alt={""}
                          className={classNames(projectcss.img, sty.img__shLu2)}
                          src={
                            "/plasmic/imbewu_mobile_first/images/avatarjpg.jpeg"
                          }
                        />

                        <img
                          alt={""}
                          className={classNames(projectcss.img, sty.img__nSf0I)}
                          src={
                            "/plasmic/imbewu_mobile_first/images/avatarjpg.jpeg"
                          }
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___7PN6
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__if3HU
                            )}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wItBq
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___5UDtE
                            )}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zaNmb
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__lbUn0
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__yovyY
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__xQjqn
                                )}
                              />
                            </div>
                          </div>
                        </div>
                      </p.Stack>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__be8Rm
                        )}
                      >
                        <PlusRoundIcon
                          data-plasmic-name={"btnAddDependants"}
                          data-plasmic-override={overrides.btnAddDependants}
                          className={classNames(
                            projectcss.all,
                            sty.btnAddDependants
                          )}
                          role={"img"}
                        />
                      </div>
                    </p.Stack>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__ay4R)}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__ulB7G)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bM1XM
                        )}
                      >
                        {"My Beneficiaries"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__mYkXu
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ryl7V
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ao1Tp
                            )}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__u6AoC
                            )}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__c1Bbl
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__neCpw
                              )}
                            />
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cvDpY
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__jCpXd
                              )}
                            />
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__eiH9A
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__aFtQq
                              )}
                            />
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ebiv6
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__s73KG
                              )}
                            />
                          </div>
                        </p.Stack>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ib4Zq
                          )}
                        >
                          <PlusRoundIcon
                            data-plasmic-name={"btnAddBenficiary"}
                            data-plasmic-override={overrides.btnAddBenficiary}
                            className={classNames(
                              projectcss.all,
                              sty.btnAddBenficiary
                            )}
                            role={"img"}
                          />
                        </div>
                      </p.Stack>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__cFq4V
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__cOqmY
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ewdJ
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vVaFu
                            )}
                          >
                            {"Cash Payout "}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__skLyW
                            )}
                          >
                            {"R21 000"}
                          </div>
                        </div>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__utZw5
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___2RfwC
                            )}
                          >
                            {"24 month Bonus Included"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wTffS
                            )}
                          >
                            {"25 | 02 | 2021"}
                          </div>
                        </p.Stack>
                      </div>
                    </div>
                  </div>
                </div>
              ) : null}
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navPageTitle",
    "pageTitle2",
    "outer",
    "iconRound",
    "btnAddDependants",
    "btnAddBenficiary"
  ],

  navPageTitle: ["navPageTitle", "pageTitle2"],
  pageTitle2: ["pageTitle2"],
  outer: ["outer", "iconRound", "btnAddDependants", "btnAddBenficiary"],
  iconRound: ["iconRound"],
  btnAddDependants: ["btnAddDependants"],
  btnAddBenficiary: ["btnAddBenficiary"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicDashboard__ArgProps,
      internalVariantPropNames: PlasmicDashboard__VariantProps
    });

    return PlasmicDashboard__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDashboard";
  } else {
    func.displayName = `PlasmicDashboard.${nodeName}`;
  }
  return func;
}

export const PlasmicDashboard = Object.assign(
  // Top-level PlasmicDashboard renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navPageTitle: makeNodeComponent("navPageTitle"),
    pageTitle2: makeNodeComponent("pageTitle2"),
    outer: makeNodeComponent("outer"),
    iconRound: makeNodeComponent("iconRound"),
    btnAddDependants: makeNodeComponent("btnAddDependants"),
    btnAddBenficiary: makeNodeComponent("btnAddBenficiary"),
    // Metadata about props expected for PlasmicDashboard
    internalVariantProps: PlasmicDashboard__VariantProps,
    internalArgProps: PlasmicDashboard__ArgProps
  }
);

export default PlasmicDashboard;
/* prettier-ignore-end */
