// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3ekFgeJQEEmC58uuLfkDcf
// Component: NddJViVX6p5
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavPageTitle from "../../NavPageTitle"; // plasmic-import: _bfo_NMVKD/component
import IconRound from "../../IconRound"; // plasmic-import: fi0LamIfb0/component
import Select from "../../Select"; // plasmic-import: bCQIfT3kT1u/component
import BtnNormal from "../../BtnNormal"; // plasmic-import: xohdOATSWS/component
import BtnReadMore from "../../BtnReadMore"; // plasmic-import: nCdhjhK5Fp/component
import FooterWidget from "../../FooterWidget"; // plasmic-import: kn0Z3MZd2G/component
import { useScreenVariants as useScreenVariantstPLuZHt02V } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: tPLuZHt02v/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_imbewu_mobile_first.module.css"; // plasmic-import: 3ekFgeJQEEmC58uuLfkDcf/projectcss
import sty from "./PlasmicAddBeneficiary.module.css"; // plasmic-import: NddJViVX6p5/css
import AddUserIcon from "./icons/PlasmicIcon__AddUser"; // plasmic-import: yZALK4m9q/icon
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: Da3-UuQviP/icon

export const PlasmicAddBeneficiary__VariantProps = new Array();

export const PlasmicAddBeneficiary__ArgProps = new Array();

function PlasmicAddBeneficiary__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantstPLuZHt02V()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__nx3UU)}>
            <NavPageTitle
              data-plasmic-name={"navPageTitle"}
              data-plasmic-override={overrides.navPageTitle}
              className={classNames("__wab_instance", sty.navPageTitle)}
              pageTitle={
                <div
                  data-plasmic-name={"pageTitle"}
                  data-plasmic-override={overrides.pageTitle}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.pageTitle
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobile")
                    ? "Add a Beneficiary"
                    : "Add a Beneficiary"}
                </div>
              }
            />

            <div
              data-plasmic-name={"outer"}
              data-plasmic-override={overrides.outer}
              className={classNames(projectcss.all, sty.outer)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__vy1Sw)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__igUwn)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__z6KYg)}
                  >
                    <IconRound
                      data-plasmic-name={"iconRound"}
                      data-plasmic-override={overrides.iconRound}
                      className={classNames("__wab_instance", sty.iconRound)}
                      icon={
                        <AddUserIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___3Zr7H
                          )}
                          role={"img"}
                        />
                      }
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fNoZf
                      )}
                    >
                      {"Add a Beneficiary "}
                    </div>
                  </p.Stack>

                  <input
                    data-plasmic-name={"inputFirstName"}
                    data-plasmic-override={overrides.inputFirstName}
                    className={classNames(projectcss.input, sty.inputFirstName)}
                    placeholder={"First Name"}
                    size={1}
                    type={"text"}
                    value={""}
                  />

                  <input
                    data-plasmic-name={"inputLastName"}
                    data-plasmic-override={overrides.inputLastName}
                    className={classNames(projectcss.input, sty.inputLastName)}
                    placeholder={"Surname"}
                    size={1}
                    type={"text"}
                    value={""}
                  />

                  <input
                    data-plasmic-name={"inputGender"}
                    data-plasmic-override={overrides.inputGender}
                    className={classNames(projectcss.input, sty.inputGender)}
                    placeholder={"Gender"}
                    size={1}
                    type={"text"}
                    value={""}
                  />

                  <input
                    data-plasmic-name={"inputId"}
                    data-plasmic-override={overrides.inputId}
                    className={classNames(projectcss.input, sty.inputId)}
                    placeholder={"ID Number"}
                    size={1}
                    type={"text"}
                    value={""}
                  />

                  <input
                    data-plasmic-name={"inputDob"}
                    data-plasmic-override={overrides.inputDob}
                    className={classNames(projectcss.input, sty.inputDob)}
                    placeholder={"Date Of Birth (YYYY/MM/DD)"}
                    size={1}
                    type={"text"}
                    value={""}
                  />

                  <input
                    data-plasmic-name={"inputDob2"}
                    data-plasmic-override={overrides.inputDob2}
                    className={classNames(projectcss.input, sty.inputDob2)}
                    placeholder={"Date Of Birth (YYYY/MM/DD)"}
                    size={1}
                    type={"text"}
                    value={""}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__muxNt
                    )}
                  >
                    {"Relationship"}
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__resQb)}
                  >
                    <Select
                      data-plasmic-name={"inputRelationship"}
                      data-plasmic-override={overrides.inputRelationship}
                      className={classNames(
                        "__wab_instance",
                        sty.inputRelationship
                      )}
                      defaultValue={""}
                      name={"Father"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__vwcRp)}
                  >
                    <BtnNormal
                      data-plasmic-name={"submitBtn"}
                      data-plasmic-override={overrides.submitBtn}
                      className={classNames("__wab_instance", sty.submitBtn)}
                    >
                      <button
                        data-plasmic-name={"submitBtn2"}
                        data-plasmic-override={overrides.submitBtn2}
                        className={classNames(
                          projectcss.button,
                          projectcss.__wab_text,
                          sty.submitBtn2
                        )}
                      >
                        {"SAVE  NEW BENEFICIARY"}
                      </button>
                    </BtnNormal>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox___9CpYr)}
                  >
                    <BtnNormal
                      data-plasmic-name={"backBtn"}
                      data-plasmic-override={overrides.backBtn}
                      className={classNames("__wab_instance", sty.backBtn)}
                      ghostGreen={true}
                    >
                      <button
                        data-plasmic-name={"submitBtn4"}
                        data-plasmic-override={overrides.submitBtn4}
                        className={classNames(
                          projectcss.button,
                          projectcss.__wab_text,
                          sty.submitBtn4
                        )}
                      >
                        {"GO BACK "}
                      </button>
                    </BtnNormal>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__tbhsZ)}
                  >
                    <BtnReadMore
                      data-plasmic-name={"btnReadMore"}
                      data-plasmic-override={overrides.btnReadMore}
                      className={classNames("__wab_instance", sty.btnReadMore)}
                      slot={
                        <Icon22Icon
                          className={classNames(projectcss.all, sty.svg__afplr)}
                          role={"img"}
                        />
                      }
                    >
                      {"ADD ANOTHER BENEFICIARY"}
                    </BtnReadMore>
                  </div>
                </p.Stack>
              </div>
            </div>

            <FooterWidget
              data-plasmic-name={"footerWidget"}
              data-plasmic-override={overrides.footerWidget}
              className={classNames("__wab_instance", sty.footerWidget)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navPageTitle",
    "pageTitle",
    "outer",
    "iconRound",
    "inputFirstName",
    "inputLastName",
    "inputGender",
    "inputId",
    "inputDob",
    "inputDob2",
    "inputRelationship",
    "submitBtn",
    "submitBtn2",
    "backBtn",
    "submitBtn4",
    "btnReadMore",
    "footerWidget"
  ],

  navPageTitle: ["navPageTitle", "pageTitle"],
  pageTitle: ["pageTitle"],
  outer: [
    "outer",
    "iconRound",
    "inputFirstName",
    "inputLastName",
    "inputGender",
    "inputId",
    "inputDob",
    "inputDob2",
    "inputRelationship",
    "submitBtn",
    "submitBtn2",
    "backBtn",
    "submitBtn4",
    "btnReadMore"
  ],

  iconRound: ["iconRound"],
  inputFirstName: ["inputFirstName"],
  inputLastName: ["inputLastName"],
  inputGender: ["inputGender"],
  inputId: ["inputId"],
  inputDob: ["inputDob"],
  inputDob2: ["inputDob2"],
  inputRelationship: ["inputRelationship"],
  submitBtn: ["submitBtn", "submitBtn2"],
  submitBtn2: ["submitBtn2"],
  backBtn: ["backBtn", "submitBtn4"],
  submitBtn4: ["submitBtn4"],
  btnReadMore: ["btnReadMore"],
  footerWidget: ["footerWidget"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicAddBeneficiary__ArgProps,
      internalVariantPropNames: PlasmicAddBeneficiary__VariantProps
    });

    return PlasmicAddBeneficiary__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAddBeneficiary";
  } else {
    func.displayName = `PlasmicAddBeneficiary.${nodeName}`;
  }
  return func;
}

export const PlasmicAddBeneficiary = Object.assign(
  // Top-level PlasmicAddBeneficiary renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navPageTitle: makeNodeComponent("navPageTitle"),
    pageTitle: makeNodeComponent("pageTitle"),
    outer: makeNodeComponent("outer"),
    iconRound: makeNodeComponent("iconRound"),
    inputFirstName: makeNodeComponent("inputFirstName"),
    inputLastName: makeNodeComponent("inputLastName"),
    inputGender: makeNodeComponent("inputGender"),
    inputId: makeNodeComponent("inputId"),
    inputDob: makeNodeComponent("inputDob"),
    inputDob2: makeNodeComponent("inputDob2"),
    inputRelationship: makeNodeComponent("inputRelationship"),
    submitBtn: makeNodeComponent("submitBtn"),
    submitBtn2: makeNodeComponent("submitBtn2"),
    backBtn: makeNodeComponent("backBtn"),
    submitBtn4: makeNodeComponent("submitBtn4"),
    btnReadMore: makeNodeComponent("btnReadMore"),
    footerWidget: makeNodeComponent("footerWidget"),
    // Metadata about props expected for PlasmicAddBeneficiary
    internalVariantProps: PlasmicAddBeneficiary__VariantProps,
    internalArgProps: PlasmicAddBeneficiary__ArgProps
  }
);

export default PlasmicAddBeneficiary;
/* prettier-ignore-end */
