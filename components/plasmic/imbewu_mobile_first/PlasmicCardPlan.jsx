// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3ekFgeJQEEmC58uuLfkDcf
// Component: JL5IPPaFbSL
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import PricingTitle from "../../PricingTitle"; // plasmic-import: v13NC5cnD3/component
import { useScreenVariants as useScreenVariantstPLuZHt02V } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: tPLuZHt02v/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_imbewu_mobile_first.module.css"; // plasmic-import: 3ekFgeJQEEmC58uuLfkDcf/projectcss
import sty from "./PlasmicCardPlan.module.css"; // plasmic-import: JL5IPPaFbSL/css
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: RHqY8F8M2K/icon

export const PlasmicCardPlan__VariantProps = new Array();

export const PlasmicCardPlan__ArgProps = new Array();

function PlasmicCardPlan__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantstPLuZHt02V()
  });

  return (hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__omG7X
          )}
        >
          {hasVariant(globalVariants, "screen", "mobile")
            ? "Our Plans"
            : "Enter some text"}
        </div>
      ) : null}
      {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
        <img
          data-plasmic-name={"img"}
          data-plasmic-override={overrides.img}
          alt={""}
          className={classNames(projectcss.img, sty.img)}
          src={
            hasVariant(globalVariants, "screen", "mobile")
              ? "/plasmic/imbewu_mobile_first/images/imgPlanAjpg.jpeg"
              : undefined
          }
        />
      ) : null}
      {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
        <div className={classNames(projectcss.all, sty.freeBox__qdXbc)}>
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <Icon10Icon
              data-plasmic-name={"arrowRight"}
              data-plasmic-override={overrides.arrowRight}
              className={classNames(projectcss.all, sty.arrowRight)}
              role={"img"}
            />
          ) : null}
        </div>
      ) : null}
      {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
        <PricingTitle
          data-plasmic-name={"pricingTitle"}
          data-plasmic-override={overrides.pricingTitle}
          className={classNames("__wab_instance", sty.pricingTitle)}
        />
      ) : null}
      {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
        <div className={classNames(projectcss.all, sty.freeBox__kwKxz)}>
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__v4Aj1
              )}
            >
              {hasVariant(globalVariants, "screen", "mobile")
                ? "Annual Payout "
                : "Annual Payout "}
            </div>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__uydA
              )}
            >
              {hasVariant(globalVariants, "screen", "mobile")
                ? "R1080"
                : "Enter some text"}
            </div>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__mbMMx
              )}
            >
              {hasVariant(globalVariants, "screen", "mobile")
                ? "Only R175 pm"
                : "Enter some text"}
            </div>
          ) : null}
        </div>
      ) : null}
      {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
        <div className={classNames(projectcss.all, sty.freeBox__r1LcM)}>
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hbAer
              )}
            >
              {hasVariant(globalVariants, "screen", "mobile")
                ? "Family cover*"
                : "Family cover*"}
            </div>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__tDe1
              )}
            >
              {hasVariant(globalVariants, "screen", "mobile")
                ? "R15000"
                : "Enter some text"}
            </div>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__mf0Ej
              )}
            >
              {hasVariant(globalVariants, "screen", "mobile")
                ? "Only R175 pm"
                : "Enter some text"}
            </div>
          ) : null}
        </div>
      ) : null}
      {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
        <div className={classNames(projectcss.all, sty.freeBox__lYbcA)}>
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__xgC4N
              )}
            >
              {hasVariant(globalVariants, "screen", "mobile")
                ? "Extended Family Cover "
                : "Extended Family Cover "}
            </div>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___0VD
              )}
            >
              {hasVariant(globalVariants, "screen", "mobile")
                ? "R1080"
                : "Enter some text"}
            </div>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__mtZqs
              )}
            >
              {hasVariant(globalVariants, "screen", "mobile")
                ? "Only R175 pm"
                : "Enter some text"}
            </div>
          ) : null}
        </div>
      ) : null}
      {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text___9C9Hd
          )}
        >
          {hasVariant(globalVariants, "screen", "mobile")
            ? "*See plans and benefits for details "
            : "*See plans and benefits for details "}
        </div>
      ) : null}
      {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
        <div className={classNames(projectcss.all, sty.freeBox__dP02)}>
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__pXoGz
              )}
            >
              {hasVariant(globalVariants, "screen", "mobile")
                ? "Annual Payout "
                : "Enter some text"}
            </div>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__lZoyh
              )}
            >
              {hasVariant(globalVariants, "screen", "mobile")
                ? "R1080"
                : "Enter some text"}
            </div>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__tSlX
              )}
            >
              {hasVariant(globalVariants, "screen", "mobile")
                ? "Only R175 pm"
                : "Enter some text"}
            </div>
          ) : null}
        </div>
      ) : null}
      {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__g3NIs
          )}
        >
          {hasVariant(globalVariants, "screen", "mobile")
            ? "Protect those closest to you with a comprehensive family funeral benefit while receiving a guaranteed pay-out every year."
            : "Enter some text"}
        </div>
      ) : null}
    </p.Stack>
  ) : null;
}

const PlasmicDescendants = {
  root: ["root", "img", "arrowRight", "pricingTitle"],
  img: ["img"],
  arrowRight: ["arrowRight"],
  pricingTitle: ["pricingTitle"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicCardPlan__ArgProps,
      internalVariantPropNames: PlasmicCardPlan__VariantProps
    });

    return PlasmicCardPlan__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicCardPlan";
  } else {
    func.displayName = `PlasmicCardPlan.${nodeName}`;
  }
  return func;
}

export const PlasmicCardPlan = Object.assign(
  // Top-level PlasmicCardPlan renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    img: makeNodeComponent("img"),
    arrowRight: makeNodeComponent("arrowRight"),
    pricingTitle: makeNodeComponent("pricingTitle"),
    // Metadata about props expected for PlasmicCardPlan
    internalVariantProps: PlasmicCardPlan__VariantProps,
    internalArgProps: PlasmicCardPlan__ArgProps
  }
);

export default PlasmicCardPlan;
/* prettier-ignore-end */
